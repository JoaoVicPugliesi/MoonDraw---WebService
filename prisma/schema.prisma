// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  client
  admin
}

model User {
  id                Int           @default(autoincrement())
  public_id         String        @id
  name              String
  surname           String
  email             String        @unique
  password          String
  role              Role          @default(client)
  is_active         Boolean       @default(false)
  created_at        DateTime      @default(now())
  email_verified_at DateTime?
  refreshToken      RefreshToken?
  Cart              Cart?

  @@map("users")
}

model RefreshToken {
  id         Int    @default(autoincrement())
  public_id  String @id
  expires_in Int
  user       User   @relation(fields: [user_id], references: [public_id], onDelete: Cascade)
  user_id    String @unique

  @@map("refresh_tokens")
}

model Product {
  id           Int      @default(autoincrement())
  public_id    String   @id
  name         String
  desc         String   @default("No Description")
  price        Float    @default(0)
  supply       Int      @default(0)
  publisher    String
  published_at DateTime @default(now())

  @@map("products")
}

model Cart {
  id        Int    @default(autoincrement())
  public_id String @id
  user_id   String @unique

  user User @relation(fields: [user_id], references: [public_id], onDelete: Cascade)

  @@map("carts")
}

